name: Build & Test Main

on:
  push:
    branches: [main]
    tags: ['v*']
  release:
    types: [published]

env:
  NETCORE_VERSION: "9.0.x"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  PROJECT_NAME: Typeahead
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}

jobs:
  build:
    name: Build, test and pack
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      is_release: ${{ steps.check_tag.outputs.is_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for MinVer

      - name: Setup .NET Core ${{ env.NETCORE_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Check if release tag
        id: check_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Get version from MinVer
        id: version
        run: |
          dotnet restore src/Blazored.$PROJECT_NAME/Blazored.$PROJECT_NAME.csproj
          VERSION=$(dotnet msbuild src/Blazored.$PROJECT_NAME/Blazored.$PROJECT_NAME.csproj -p:Configuration=Release -getProperty:Version)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore src/Blazored.$PROJECT_NAME/Blazored.$PROJECT_NAME.csproj

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack -c Release --no-build --no-restore -o nupkg src/Blazored.$PROJECT_NAME/Blazored.$PROJECT_NAME.csproj

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: nupkg/*.nupkg

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: nupkg
      
      - name: Push to NuGet Feed
        run: |
          if [ "${{ needs.build.outputs.is_release }}" == "true" ]; then
            echo "Pushing release version ${{ needs.build.outputs.version }}"
            dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --api-key $NUGET_KEY --skip-duplicate
          else
            echo "Pushing pre-release version ${{ needs.build.outputs.version }}"
            dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --api-key $NUGET_KEY --skip-duplicate
          fi

  deploy-sample:
    needs: build
    if: github.event_name == 'release' || (github.ref == 'refs/heads/main' && needs.build.outputs.is_release == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}
      
      - name: Publish Sample Site
        run: dotnet publish -c Release samples/BlazorWebAssembly/BlazorWebAssembly.csproj

      - name: Rewrite base href
        uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
        with:
          html_path: samples/BlazorWebAssembly/bin/Release/net9.0/publish/wwwroot/index.html
          base_href: /${{ env.PROJECT_NAME }}/

      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: samples/BlazorWebAssembly/bin/Release/net9.0/publish/wwwroot
          single-commit: true
